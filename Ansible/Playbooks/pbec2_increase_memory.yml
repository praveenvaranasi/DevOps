---
- hosts: local
  remote_user: ec2-user
  tasks:
  - name: getting the Details
    ec2_instance_facts:
      aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}" 
      aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      filters: 
        "tag:Name": "{{ tag_value }}"
    register: outres

  - name: Creating the ami
    ec2_ami:
      aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
      aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      name: ansiblesss
      delete_snapshot: yes
      state: present
      instance_id: "{{ item['instance_id'] }}"
      wait: yes
    when: item.state.name == "stopped"
    loop: "{{ outres['instances'] }}"
    loop_control:
      label: "{{ item['instance_id'] }}"
    register: amidetails

  - name: Relaunching the Instance
    ec2:
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
        count: 1
        group_id: sg-0ac4b7d3252eab0fa
        image: "{{ item['image_id'] }}"
        instance_type: t2.micro
        key_name: Praveen-AWS
        region: us-east-2
        vpc_subnet_id: subnet-0d06821448c851ca9
        zone: us-east-2a
        termination_protection: no
        wait: yes
        instance_tags:
          Name: centoses
        volumes:
        - device_name: /dev/sda1
          volume_size: "{{ size }}"
          volume_type: gp2
          delete_on_termination: true
        assign_public_ip: no
    loop: "{{ amidetails['results'] }}"
    loop_control:
      label: "{{ item['image_id'] }}"
