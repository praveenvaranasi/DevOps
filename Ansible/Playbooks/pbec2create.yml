---
- hosts: local
  user: ec2-user
  vars_files:
    - ./ec2_vars.yml
  tasks:
  - name: creating an ec2 instance
    ec2:
      aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
      aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
      key_name: "{{ key_name }}"
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      region: "{{ region }}"
      zone: "{{ zone }}"
      wait: yes
      group: "{{ group }}"
      vpc_subnet_id: "{{ vpc_subnet_id }}"
      assign_public_ip: "{{ assign_public_ip }}"
      count: "{{ count }}"
      volumes:
      - device_name: "{{ device_name }}"
        volume_size: "{{ volume_size }}"
        volume_type: "{{ volume_type }}"
        delete_on_termination: "{{ delete_on_termination }}" 
      instance_tags:
        Name: "{{ value }}"
    register: ec2Instance

  - name: Adding the PrivateIP to the Inventory file
    lineinfile:
      path: "{{ hosts }}"
      line: "{{ item.private_ip }}"
      insertafter: "{{ hosts_group }}"
    with_items: "{{ ec2Instance.instances }}"
    loop_control: 
      label: "{{ item.private_ip }}"
    register: temp

  - name: Deleting the existing file 
    file:
      dest: "{{ info_file }}"
      state: absent

  - name: Output
    lineinfile:
      create: yes
      path: "{{ info_file }}"
      line: "Name: {{ item.tags.Name }}  \nAMI: {{ item.image_id }} \nPublic_ip: {{ item.public_ip }} \nPrivate_ip: {{ item.private_ip }} \nKey: {{ item.key_name}}"
      insertafter: EOF
    with_items: "{{ ec2Instance.instances}}"
    loop_control: 
        label: "{{ item.tags.Name }}"
    register: temp2

  - name: waiting for the Instance to start
    shell: sleep 25s

  - name: Refreshing inventory file
    meta: refresh_inventory

- hosts: nodes
  become: yes
  remote_user: centos
  tasks:
    - name: Installing the docker
      yum: 
        name: docker
        state: latest

    - name: Installing the Java
      yum:
        name: java
        state: latest

    - name: Installing wget
      yum:
        name: wget
        state: latest

    - name: starting the docker service
      service:
        name: docker
        state: started

    - name: Installing pip
      shell: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py

    - name: Installing the docker-py
      pip:
        name: docker-py

    - name: Running the container
      docker_container:
        name: jenkins
        image: praveenvp/softwares:jenkins
        pull: yes
        state: started
        ports:
          - "8080:8080"

    - name: Copying key to newly created Instance
      copy:
        src: /home/ec2-user/Learn/Keys/Praveen-AWS.pem
        dest: /home/centos/
        owner: root
        group: root
        mode: 0400
